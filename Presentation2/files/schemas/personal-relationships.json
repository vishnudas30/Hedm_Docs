{
  "title": "Personal Relationship",
  "description": "A kind of relationship between two people",
  "type": "object",
  "properties": {
    "metadata": {
      "title": "Metadata",
      "description": "Metadata about the JSON payload",
      "type": "object",
      "properties": {
        "createdBy": {
          "title": "Created By",
          "description": "The name of the originator (user or system) of the data. This is informational only, do not use in business logic!",
          "type": "string"
        },
        "createdOn": {
          "title": "Created On",
          "description": "The date and time when the entity instance was created",
          "oneOf": [
            {
              "type": "string",
              "format": "date-time",
              "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
            },
            {
              "type": "string",
              "maxLength": 0
            }
          ]
        },
        "modifiedBy": {
          "title": "Modified By",
          "description": "The name of the modifier (user or system) of the data. This is informational only, do not use in business logic!",
          "type": "string"
        },
        "modifiedOn": {
          "title": "Modified On",
          "description": "The date and time when the entity instance was last modified",
          "oneOf": [
            {
              "type": "string",
              "format": "date-time",
              "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
            },
            {
              "type": "string",
              "maxLength": 0
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "id": {
      "title": "ID",
      "description": "The global identifier of the relationship",
      "type": "string",
      "format": "guid",
      "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
    },
    "title": {
      "title": "Title",
      "description": "The full name of the relationship",
      "type": "string",
      "minLength": 1
    },
    "description": {
      "title": "Description",
      "description": "The full description of the relationship",
      "type": "string"
    },
    "subjectPerson": {
      "title": "Subject Person",
      "description": "A person, with regards to whom the relationship is considered",
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "The global identifier for Subject Person",
          "type": "string",
          "format": "guid",
          "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
        }
      },
      "links": [
        {
          "rel": "self",
          "href": "/persons/{id}",
          "targetSchema": {
            "$ref": "persons.json#"
          }
        }
      ],
      "additionalProperties": false,
      "required": [
        "id"
      ]
    },
    "relatedPerson": {
      "title": "Related Person",
      "description": "A person related to the subject one",
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "The global identifier for Related Person",
          "type": "string",
          "format": "guid",
          "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
        }
      },
      "links": [
        {
          "rel": "self",
          "href": "/persons/{id}",
          "targetSchema": {
            "$ref": "persons.json#"
          }
        }
      ],
      "additionalProperties": false,
      "required": [
        "id"
      ]
    },
    "relationshipType": {
      "title": "Personal Relationship Type",
      "description": "Type of relationships between two people",
      "enum": [
        "parent",
        "stepParent",
        "mother",
        "stepMother",
        "father",
        "stepFather",
        "child",
        "stepChild",
        "daughter",
        "stepDaughter",
        "son",
        "stepSon",
        "sibling",
        "stepSibling",
        "brother",
        "stepBrother",
        "sister",
        "stepSister",
        "spouse",
        "wife",
        "partner",
        "grandParent",
        "grandMother",
        "grandFather",
        "grandChild",
        "grandDaughter",
        "grandSon",
        "parentInLaw",
        "motherInLaw",
        "fatherInLaw",
        "childInLaw",
        "daughterInLaw",
        "sonInLaw",
        "siblingInLaw",
        "sisterInLaw",
        "brotherInLaw",
        "siblingOfParent",
        "aunt",
        "uncle",
        "childOfSibling",
        "niece",
        "nephew",
        "cousin",
        "friend",
        "relative",
        "coworker",
        "neighbor",
        "classmate",
        "caregiver",
        "other"
      ],
      "type": "string"
    },
    "detail": {
      "title": "Detail",
      "description": "",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "title": "ID",
              "description": "The global identifier for Detail",
              "type": "string",
              "format": "guid",
              "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
            }
          },
          "links": [
            {
              "rel": "self",
              "href": "/personal-relationship-types/{id}",
              "targetSchema": {
                "$ref": "personal-relationship-types.json#"
              }
            }
          ],
          "additionalProperties": false,
          "required": [
            "id"
          ]
        },
        {
          "type": "object",
          "maxProperties": 0
        }
      ]
    },
    "status": {
      "title": "Status",
      "description": "The status of the relationship (where appropriate)",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        },
        {
          "type": "string",
          "maxLength": 0
        }
      ]
    },
    "startOn": {
      "title": "Start Date",
      "description": "A date when a relationship started",
      "oneOf": [
        {
          "type": "string",
          "format": "date-time",
          "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
        },
        {
          "type": "string",
          "maxLength": 0
        }
      ]
    },
    "endOn": {
      "title": "End Date",
      "description": "A date when a relationship ended",
      "oneOf": [
        {
          "type": "string",
          "format": "date-time",
          "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
        },
        {
          "type": "string",
          "maxLength": 0
        }
      ]
    },
    "comments": {
      "title": "Comments",
      "description": "Comments on the relationship",
      "type": "string"
    }
  },
  "required": [
    "id",
    "title",
    "subjectPerson",
    "relatedPerson",
    "relationshipType"
  ],
  "additionalProperties": false
}