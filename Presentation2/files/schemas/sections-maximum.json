{
  "title": "Section",
  "description": "An instance of a Course.",
  "type": "object",
  "properties": {
    "id": {
      "title": "ID",
      "description": "A globally unique identifier of a section maximum to be used in all external references.",
      "type": "string",
      "format": "guid",
      "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
    },
    "title": {
      "title": "Title",
      "description": "The full name of a section.",
      "type": "string",
      "minLength": 1
    },
    "description": {
      "title": "Description",
      "description": "A description of a section.",
      "type": "string"
    },
    "startOn": {
      "title": "Offering Start Date",
      "description": "The starting date at which a Section may be scheduled to be taken.",
      "type": "string",
      "format": "date-time",
      "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
    },
    "endOn": {
      "title": "Offering End Date",
      "description": "The ending date at which a Section may no longer be scheduled to be taken.",
      "oneOf": [
        {
          "type": "string",
          "format": "date-time",
          "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
        },
        {
          "type": "string",
          "maxLength": 0
        }
      ]
    },
    "code": {
      "title": "Section Code",
      "description": "The human-readable identifier of a Section. It is generally unique within an academic period.",
      "type": "string"
    },
    "number": {
      "title": "Section Number",
      "description": "A numbering scheme or other mark that distinguishes between multiple sections.  It is generally unique within an academic period and course.",
      "type": "string"
    },
    "instructionalPlatform": {
      "title": "Instructional Platform",
      "description": "The technology platform used to manage the administration of a section",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "code": {
              "title": "Code",
              "description": "The code that identifies a Technology Platform.",
              "type": "string"
            },
            "title": {
              "title": "Title",
              "description": "The full name of a Technology Platform.",
              "type": "string",
              "minLength": 1
            },
            "detail": {
              "title": "Instructional Platform",
              "description": "The instructional platform used in this section.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "ID",
                  "description": "The global identifier for Instructional Platform",
                  "type": "string",
                  "format": "guid",
                  "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
                }
              },
              "links": [
                {
                  "rel": "self",
                  "href": "/instructional-platforms/{id}",
                  "targetSchema": {
                    "$ref": "instructional-platforms.json#"
                  }
                }
              ],
              "additionalProperties": false,
              "required": [
                "id"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "title",
            "detail"
          ]
        },
        {
          "type": "object",
          "maxProperties": 0
        }
      ]
    },
    "academicPeriod": {
      "title": "Academic Period",
      "description": "The academic time period associated with this section.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "code": {
              "title": "Code",
              "description": "The code that identifies an academic time period.",
              "type": "string"
            },
            "title": {
              "title": "Title",
              "description": "The full name of an academic time period.",
              "type": "string",
              "minLength": 1
            },
            "startOn": {
              "title": "Period Start Date",
              "description": "The date at which the academic time period begins",
              "type": "string",
              "format": "date-time",
              "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
            },
            "endOn": {
              "title": "Period End Date",
              "description": "The date at which the academic time period ends",
              "type": "string",
              "format": "date-time",
              "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
            },
            "detail": {
              "title": "Academic Period",
              "description": "The academic period used in this section.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "ID",
                  "description": "The global identifier for Academic Period",
                  "type": "string",
                  "format": "guid",
                  "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
                }
              },
              "links": [
                {
                  "rel": "self",
                  "href": "/academic-periods/{id}",
                  "targetSchema": {
                    "$ref": "academic-periods.json#"
                  }
                }
              ],
              "additionalProperties": false,
              "required": [
                "id"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "title",
            "startOn",
            "endOn",
            "detail"
          ]
        },
        {
          "type": "object",
          "maxProperties": 0
        }
      ]
    },
    "administrativePeriod": {
      "title": "Administrative Time Period",
      "description": "The administrative time period associated with this section.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "code": {
              "title": "Code",
              "description": "The code that identifies an administrative time period.",
              "type": "string"
            },
            "title": {
              "title": "Title",
              "description": "The full name of an administrative time period.",
              "type": "string",
              "minLength": 1
            },
            "startOn": {
              "title": "Period Start Date",
              "description": "The date at which the administrative time period begins",
              "type": "string",
              "format": "date-time",
              "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
            },
            "endOn": {
              "title": "Period End Date",
              "description": "The date at which the administrative time period ends",
              "type": "string",
              "format": "date-time",
              "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
            },
            "detail": {
              "title": "Administrative Period",
              "description": "The administrative period used in this section.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "ID",
                  "description": "The global identifier for Administrative Period",
                  "type": "string",
                  "format": "guid",
                  "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
                }
              },
              "links": [
                {
                  "rel": "self",
                  "href": "/administrative-periods/{id}",
                  "targetSchema": {
                    "$ref": "administrative-periods.json#"
                  }
                }
              ],
              "additionalProperties": false,
              "required": [
                "id"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "title",
            "startOn",
            "endOn",
            "detail"
          ]
        },
        {
          "type": "object",
          "maxProperties": 0
        }
      ]
    },
    "course": {
      "title": "Course",
      "description": "The course associated with this section.",
      "type": "object",
      "properties": {
        "title": {
          "title": "Title",
          "description": "The full name of a course.",
          "type": "string",
          "minLength": 1
        },
        "subject": {
          "title": "Subject",
          "description": "A branch of knowledge typically used as a course of study, such as \"Mathematics\" or \"Biology\".",
          "type": "object",
          "properties": {
            "abbreviation": {
              "title": "Abbreviation",
              "description": "The abbreviated name of a subject.",
              "type": "string"
            },
            "title": {
              "title": "Title",
              "description": "The full name of a subject.",
              "type": "string",
              "minLength": 1
            },
            "detail": {
              "title": "Subject",
              "description": "The subject associated with this course.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "ID",
                  "description": "The global identifier for Subject",
                  "type": "string",
                  "format": "guid",
                  "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
                }
              },
              "links": [
                {
                  "rel": "self",
                  "href": "/subjects/{id}",
                  "targetSchema": {
                    "$ref": "subjects.json#"
                  }
                }
              ],
              "additionalProperties": false,
              "required": [
                "id"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "title",
            "detail"
          ]
        },
        "number": {
          "title": "Course Number",
          "description": "A numbering scheme to distinguish different Courses. Typically this is an integer, but can be any string.",
          "type": "string",
          "minLength": 1
        },
        "detail": {
          "title": "Course",
          "description": "The course associated with this section.",
          "type": "object",
          "properties": {
            "id": {
              "title": "ID",
              "description": "The global identifier for Course",
              "type": "string",
              "format": "guid",
              "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
            }
          },
          "links": [
            {
              "rel": "self",
              "href": "/courses/{id}",
              "targetSchema": {
                "$ref": "courses.json#"
              }
            }
          ],
          "additionalProperties": false,
          "required": [
            "id"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "title",
        "subject",
        "number",
        "detail"
      ]
    },
    "credits": {
      "title": "Credits",
      "description": "",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "creditCategory": {
            "title": "Credit Category",
            "description": "",
            "type": "object",
            "properties": {
              "code": {
                "title": "Code",
                "description": "The code that identifies a credit category.",
                "type": "string"
              },
              "title": {
                "title": "Title",
                "description": "The full name of a credit category.",
                "type": "string",
                "minLength": 1
              },
              "creditType": {
                "title": "Credit Type",
                "description": "The higher-level category of academic credits.",
                "enum": [
                  "ce",
                  "institution",
                  "transfer"
                ],
                "type": "string"
              },
              "detail": {
                "title": "Credit Category",
                "description": "The category of credit earned in this section.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "ID",
                    "description": "The global identifier for Credit Category",
                    "type": "string",
                    "format": "guid",
                    "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
                  }
                },
                "links": [
                  {
                    "rel": "self",
                    "href": "/credit-categories/{id}",
                    "targetSchema": {
                      "$ref": "credit-categories.json#"
                    }
                  }
                ],
                "additionalProperties": false,
                "required": [
                  "id"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "title",
              "detail"
            ]
          },
          "measure": {
            "title": "Unit of Measure",
            "description": "A unit or standard of measurement.",
            "enum": [
              "credit",
              "ceu",
              "hours"
            ],
            "type": "string"
          },
          "minimum": {
            "title": "Minimum number",
            "description": "The lower number, inclusive bound of a numeric range of values.",
            "type": "number"
          },
          "maximum": {
            "title": "Maximum number",
            "description": "The upper, inclusive bound of a numeric range of values.",
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "increment": {
            "title": "Increment number",
            "description": "The multiple by which a numeric range of values can be stepped from the minimum to the maximum. For example, a range of 1 to 3 with an increment of 1 would evaluate to 1, 2, or 3. Specifying an increment of 0.5 would evaluate to 1, 1.5, 2, 2.5, or 3",
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "creditCategory",
          "measure",
          "minimum"
        ]
      }
    },
    "site": {
      "title": "Site",
      "description": "A physical location within the organization where this section events will be held.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "code": {
              "title": "Code",
              "description": "The code that identifies the site.",
              "type": "string"
            },
            "title": {
              "title": "Title",
              "description": "The full name of the site.",
              "type": "string"
            },
            "detail": {
              "title": "Site",
              "description": "The site where this section's events will be held.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "ID",
                  "description": "The global identifier for Site",
                  "type": "string",
                  "format": "guid",
                  "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
                }
              },
              "links": [
                {
                  "rel": "self",
                  "href": "/sites/{id}",
                  "targetSchema": {
                    "$ref": "sites.json#"
                  }
                }
              ],
              "additionalProperties": false,
              "required": [
                "id"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "detail"
          ]
        },
        {
          "type": "object",
          "maxProperties": 0
        }
      ]
    },
    "academicLevels": {
      "title": "Academic Levels",
      "description": "",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "description": "The code that identifies the academic level.",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "description": "The full name of the academic level.",
            "type": "string",
            "minLength": 1
          },
          "detail": {
            "title": "Academic Level",
            "description": "The academic level associated with this section.",
            "type": "object",
            "properties": {
              "id": {
                "title": "ID",
                "description": "The global identifier for Academic Level",
                "type": "string",
                "format": "guid",
                "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
              }
            },
            "links": [
              {
                "rel": "self",
                "href": "/academic-levels/{id}",
                "targetSchema": {
                  "$ref": "academic-levels.json#"
                }
              }
            ],
            "additionalProperties": false,
            "required": [
              "id"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "title",
          "detail"
        ]
      }
    },
    "gradeSchemes": {
      "title": "Grade Schemes",
      "description": "",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "abbreviation": {
            "title": "Abbreviation",
            "description": "The abbreviated name of a grade scheme.",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "description": "The full name of a grade scheme.",
            "type": "string",
            "minLength": 1
          },
          "detail": {
            "title": "Grade Scheme",
            "description": "The grade scheme used in this section.",
            "type": "object",
            "properties": {
              "id": {
                "title": "ID",
                "description": "The global identifier for Grade Scheme",
                "type": "string",
                "format": "guid",
                "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
              }
            },
            "links": [
              {
                "rel": "self",
                "href": "/grade-schemes/{id}",
                "targetSchema": {
                  "$ref": "grade-schemes.json#"
                }
              }
            ],
            "additionalProperties": false,
            "required": [
              "id"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "title",
          "detail"
        ]
      }
    },
    "courseLevels": {
      "title": "Course Levels",
      "description": "",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "description": "The code that identifies a course level.",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "description": "The full name of a course level.",
            "type": "string",
            "minLength": 1
          },
          "detail": {
            "title": "Course Level",
            "description": "The course level associated with this section.",
            "type": "object",
            "properties": {
              "id": {
                "title": "ID",
                "description": "The global identifier for Course Level",
                "type": "string",
                "format": "guid",
                "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
              }
            },
            "links": [
              {
                "rel": "self",
                "href": "/course-levels/{id}",
                "targetSchema": {
                  "$ref": "course-levels.json#"
                }
              }
            ],
            "additionalProperties": false,
            "required": [
              "id"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "title",
          "detail"
        ]
      }
    },
    "status": {
      "title": "Status",
      "description": "The status of a section, for example, \"Open\" or \"Closed\".",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "closed",
            "open",
            "pending",
            "cancelled"
          ]
        },
        {
          "type": "string",
          "maxLength": 0
        }
      ]
    },
    "duration": {
      "title": "Duration",
      "description": "The scheme for calculating the duration of a section",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "length": {
              "title": "Length",
              "description": "The duration length, expressed in duration units",
              "type": "number"
            },
            "unit": {
              "title": "Unit",
              "description": "The calendar period of time equivalent to 1 unit of duration",
              "enum": [
                "days",
                "weeks",
                "months",
                "years"
              ],
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "length",
            "unit"
          ]
        },
        {
          "type": "object",
          "maxProperties": 0
        }
      ]
    },
    "maxEnrollment": {
      "title": "Maximum Enrollment",
      "description": "The maximum number of persons who are allowed to enroll for a section.",
      "oneOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ]
    },
    "instructionalEvents": {
      "title": "Instructional Events",
      "description": "",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "description": "The full name of an instructional activity that takes place during a Section.",
            "type": "string"
          },
          "instructionalMethod": {
            "title": "Instructional Method",
            "description": "",
            "type": "object",
            "properties": {
              "abbreviation": {
                "title": "Abbreviation",
                "description": "The abbreviated name of an instructional method.",
                "type": "string"
              },
              "title": {
                "title": "Title",
                "description": "The full name of an instructional method.",
                "type": "string",
                "minLength": 1
              },
              "detail": {
                "title": "Instructional Method",
                "description": "The instructional method used in this instructional event.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "ID",
                    "description": "The global identifier for Instructional Method",
                    "type": "string",
                    "format": "guid",
                    "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
                  }
                },
                "links": [
                  {
                    "rel": "self",
                    "href": "/instructional-methods/{id}",
                    "targetSchema": {
                      "$ref": "instructional-methods.json#"
                    }
                  }
                ],
                "additionalProperties": false,
                "required": [
                  "id"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "title",
              "detail"
            ]
          },
          "recurrence": {
            "title": "Recurrence",
            "description": "",
            "oneOf": [
              {
                "type": "object",
                "format": "recurrence",
                "properties": {
                  "timePeriod": {
                    "title": "Time Period",
                    "description": "The period of time to be repeated.",
                    "type": "object",
                    "properties": {
                      "startOn": {
                        "title": "Start On",
                        "description": "The beginning of the time period being repeated.",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
                      },
                      "endOn": {
                        "title": "End On",
                        "description": "The end of the time period being repeated.",
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
                          },
                          {
                            "type": "string",
                            "maxLength": 0
                          }
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "startOn"
                    ]
                  },
                  "repeatRule": {
                    "title": "Repeat Rule",
                    "description": "The rule that describes how to repeat the time period.",
                    "oneOf": [
                      {
                        "title": "Daily",
                        "description": "Rules for repeating on a daily basis.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "daily"
                            ]
                          },
                          "interval": {
                            "title": "Interval",
                            "description": "Number of days between each repetition.",
                            "oneOf": [
                              {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 365
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "ends": {
                            "title": "Ends",
                            "description": "When to end the daily repetitions.",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "repetitions": {
                                    "title": "Repetitions",
                                    "description": "Number of times to repeat, then stop.",
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 365
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "repetitions"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "title": "Date",
                                    "description": "The date after which to stop repeating.",
                                    "type": "string",
                                    "format": "date",
                                    "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])$"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "date"
                                ]
                              },
                              {
                                "type": "object",
                                "maxProperties": 0
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type"
                        ]
                      },
                      {
                        "title": "Weekly",
                        "description": "Rules for repeating on a weekly basis.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "weekly"
                            ]
                          },
                          "interval": {
                            "title": "Interval",
                            "description": "Number of weeks between each repetition.",
                            "oneOf": [
                              {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 52
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "daysOfWeek": {
                            "title": "Days of Week",
                            "description": "The days of the week on which to repeat the event.",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "sunday",
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday"
                              ]
                            }
                          },
                          "ends": {
                            "title": "Ends",
                            "description": "When to end the weekly repetitions.",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "repetitions": {
                                    "title": "Repetitions",
                                    "description": "Number of times to repeat, then stop.",
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 52
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "repetitions"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "title": "Date",
                                    "description": "The date after which to stop repeating.",
                                    "type": "string",
                                    "format": "date",
                                    "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])$"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "date"
                                ]
                              },
                              {
                                "type": "object",
                                "maxProperties": 0
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type"
                        ]
                      },
                      {
                        "title": "Monthly",
                        "description": "Rules for repeating on a monthly basis.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "monthly"
                            ]
                          },
                          "interval": {
                            "title": "Interval",
                            "description": "Number of months between each repetition.",
                            "oneOf": [
                              {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "repeatBy": {
                            "title": "Repeat By",
                            "description": "How to calculate the day of the month on which to start repeating.",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dayOfMonth": {
                                    "title": "Day of Month",
                                    "description": "The number of the day in the month on which to start repeating.",
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 31
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "dayOfMonth"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "dayOfWeek": {
                                    "title": "Day of Week",
                                    "description": "The cardinal day of the week (e.g., the first Tuesday, the last Friday, etc.) in the month on which to start repeating.",
                                    "type": "object",
                                    "properties": {
                                      "occurrence": {
                                        "title": "Occurrence",
                                        "description": "The nth occurrence of the day of the week in the month. Use a positive number to count from the start of the month (e.g., 1 = first in the month, 2 = second in the month), and a negative number to count from the end of the month (e.g. -1 = last in the month, -2 = second from last, etc.).",
                                        "type": "integer",
                                        "minimum": -4,
                                        "maximum": 4
                                      },
                                      "day": {
                                        "title": "Day of Week",
                                        "description": "A day in a week.",
                                        "type": "string",
                                        "enum": [
                                          "sunday",
                                          "monday",
                                          "tuesday",
                                          "wednesday",
                                          "thursday",
                                          "friday",
                                          "saturday"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "occurrence",
                                      "day"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "dayOfWeek"
                                ]
                              }
                            ]
                          },
                          "ends": {
                            "title": "Ends",
                            "description": "When to end the monthly repetitions.",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "repetitions": {
                                    "title": "Repetitions",
                                    "description": "Number of times to repeat, then stop.",
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 12
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "repetitions"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "title": "Date",
                                    "description": "The date after which to stop repeating.",
                                    "type": "string",
                                    "format": "date",
                                    "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])$"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "date"
                                ]
                              },
                              {
                                "type": "object",
                                "maxProperties": 0
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "repeatBy"
                        ]
                      },
                      {
                        "title": "Yearly",
                        "description": "Rules for repeating on an annual basis.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "yearly"
                            ]
                          },
                          "interval": {
                            "title": "Interval",
                            "description": "Number of years between each repetition.",
                            "oneOf": [
                              {
                                "type": "integer",
                                "minimum": 0,
                                "format": "positiveInteger"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "ends": {
                            "title": "Ends",
                            "description": "When to end the yearly repetitions.",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "repetitions": {
                                    "title": "Repetitions",
                                    "description": "Number of times to repeat, then stop.",
                                    "type": "integer",
                                    "minimum": 0,
                                    "format": "positiveInteger"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "repetitions"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "title": "Date",
                                    "description": "The date after which to stop repeating.",
                                    "type": "string",
                                    "format": "date",
                                    "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])$"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "date"
                                ]
                              },
                              {
                                "type": "object",
                                "maxProperties": 0
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type"
                        ]
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "timePeriod",
                  "repeatRule"
                ]
              },
              {
                "type": "object",
                "maxProperties": 0
              }
            ]
          },
          "locations": {
            "title": "Location",
            "description": "Locations where the instructional event will take place.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "location": {
                  "title": "Location",
                  "description": "",
                  "oneOf": [
                    {
                      "title": "Site",
                      "description": "A physical location within the organization.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Type",
                          "description": "",
                          "enum": [
                            "site"
                          ],
                          "type": "string"
                        },
                        "code": {
                          "title": "Code",
                          "description": "The code that identifies the site.",
                          "type": "string"
                        },
                        "title": {
                          "title": "Title",
                          "description": "The full name of the site.",
                          "type": "string"
                        },
                        "detail": {
                          "title": "Site",
                          "description": "The site where the event will take place.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "ID",
                              "description": "The global identifier for Site",
                              "type": "string",
                              "format": "guid",
                              "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
                            }
                          },
                          "links": [
                            {
                              "rel": "self",
                              "href": "/sites/{id}",
                              "targetSchema": {
                                "$ref": "sites.json#"
                              }
                            }
                          ],
                          "additionalProperties": false,
                          "required": [
                            "id"
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "detail"
                      ]
                    },
                    {
                      "title": "Room",
                      "description": "A room within a building, on a floor.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Type",
                          "description": "",
                          "enum": [
                            "room"
                          ],
                          "type": "string"
                        },
                        "title": {
                          "title": "Title",
                          "description": "The full name of a room.",
                          "type": "string"
                        },
                        "number": {
                          "title": "Number",
                          "description": "A numbering scheme to distinguish different buildings, floors, and rooms located in the same site.  Typically this is a string.",
                          "type": "string"
                        },
                        "floor": {
                          "title": "Floor",
                          "description": "The name of the floor where a room is located.",
                          "type": "string"
                        },
                        "building": {
                          "title": "building",
                          "description": "A physical structure, usually containing rooms, which is located at a specified physical location.",
                          "type": "object",
                          "properties": {
                            "title": {
                              "title": "Title",
                              "description": "The full name of a building.",
                              "type": "string"
                            },
                            "code": {
                              "title": "Code",
                              "description": "A code that identifies the building.",
                              "type": "string"
                            },
                            "detail": {
                              "title": "building",
                              "description": "The building used in this instructional event.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "ID",
                                  "description": "The global identifier for building",
                                  "type": "string",
                                  "format": "guid",
                                  "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
                                }
                              },
                              "links": [
                                {
                                  "rel": "self",
                                  "href": "/buildings/{id}",
                                  "targetSchema": {
                                    "$ref": "buildings.json#"
                                  }
                                }
                              ],
                              "additionalProperties": false,
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "detail"
                          ]
                        },
                        "detail": {
                          "title": "Room",
                          "description": "The room where the event will take place.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "ID",
                              "description": "The global identifier for Room",
                              "type": "string",
                              "format": "guid",
                              "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
                            }
                          },
                          "links": [
                            {
                              "rel": "self",
                              "href": "/rooms/{id}",
                              "targetSchema": {
                                "$ref": "rooms.json#"
                              }
                            }
                          ],
                          "additionalProperties": false,
                          "required": [
                            "id"
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "detail"
                      ]
                    },
                    {
                      "title": "Online Location",
                      "description": "A meeting location available via a computer network, such as an online video conference.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Type",
                          "description": "",
                          "enum": [
                            "online"
                          ],
                          "type": "string"
                        },
                        "phoneNumber": {
                          "title": "Phone",
                          "description": "The international telephone number of the location.",
                          "type": "string"
                        },
                        "phoneExtension": {
                          "title": "Extension",
                          "description": "The telephone extension number of the location's telephone.",
                          "type": "string"
                        },
                        "webAddress": {
                          "title": "Web Address",
                          "description": "The primary web address (URL) of the online meeting location.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "type"
                      ]
                    },
                    {
                      "title": "Other Location",
                      "description": "A human readable description of a location.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Type",
                          "description": "",
                          "enum": [
                            "other"
                          ],
                          "type": "string"
                        },
                        "title": {
                          "title": "Title",
                          "description": "",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "type"
                      ]
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "required": [
                "location"
              ]
            }
          },
          "instructorRoster": {
            "title": "Instructor Roster",
            "description": "",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "instructor": {
                  "title": "Instructor",
                  "description": "A person assigned to teach an instruction method of a section.",
                  "type": "object",
                  "properties": {
                    "names": {
                      "title": "Name",
                      "description": "The parts of a particular form of a person's name.",
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "Name Type",
                            "description": "A type of name being defined. For example, a \"Primary\" name.",
                            "enum": [
                              "primary"
                            ],
                            "type": "string"
                          },
                          "title": {
                            "title": "Title",
                            "description": "A person's title. For example, \"Mr.\", \"Mrs.\", \"Dr.\", etc.",
                            "type": "string"
                          },
                          "firstName": {
                            "title": "First Name",
                            "description": "A person's first, or given, name.",
                            "type": "string"
                          },
                          "middleName": {
                            "title": "Middle Name",
                            "description": "A person's middle name.",
                            "type": "string"
                          },
                          "lastNamePrefix": {
                            "title": "Last Name Prefix",
                            "description": "The article or preposition portion of a person's last name. For example, \"De la\", \"Van\", \"Van der Von\", etc.",
                            "type": "string"
                          },
                          "lastName": {
                            "title": "Last Name",
                            "description": "A person's last, or family, name.",
                            "type": "string"
                          },
                          "pedigree": {
                            "title": "Pedigree/Suffix",
                            "description": "A person's pedigree, e.g. \"Jr.\", \"Sr.\", etc.",
                            "type": "string"
                          },
                          "preferredName": {
                            "title": "Preferred Name",
                            "description": "A person's preferred, short-hand name, such as a nickname.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "firstName",
                          "lastName"
                        ]
                      }
                    },
                    "credentials": {
                      "title": "Credential",
                      "description": "The unique information that identifies a user to a system such as a network or computer.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "Type",
                            "description": "The type of credential, such as \"Person ID\", \"System ID\", etc.",
                            "enum": [
                              "ssn",
                              "sin",
                              "bannerId",
                              "colleagePersonId",
                              "elevateID",
                              "bannerSourcedId",
                              "bannerUserName",
                              "bannerUdcId"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "title": "Credential",
                            "description": "The credential used in this section.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "value"
                        ]
                      }
                    },
                    "detail": {
                      "title": "Instructor",
                      "description": "The instructor teaching this section.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "ID",
                          "description": "The global identifier for Instructor",
                          "type": "string",
                          "format": "guid",
                          "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
                        }
                      },
                      "links": [
                        {
                          "rel": "self",
                          "href": "/persons/{id}",
                          "targetSchema": {
                            "$ref": "persons.json#"
                          }
                        }
                      ],
                      "additionalProperties": false,
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "detail"
                  ]
                },
                "workLoadPercentage": {
                  "title": "Load Percentage",
                  "description": "The rate or proportion per hundred of the instructional method's work load that is attributable to the instructor.",
                  "oneOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "responsibilityPercentage": {
                  "title": "Responsibility Percentage",
                  "description": "The rate or proportion per hundred of the responsibility for managing the instructional method's activities that is attributable to the instructor.",
                  "oneOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "workStartOn": {
                  "title": "Work Start Date",
                  "description": "The date when an instructor is assigned to start teaching the scheduled event for a Section.",
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
                    },
                    {
                      "type": "string",
                      "maxLength": 0
                    }
                  ]
                },
                "workEndOn": {
                  "title": "Work End Date",
                  "description": "The date after which an instructor is no longer assigned to the scheduled event for a Section.",
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
                    },
                    {
                      "type": "string",
                      "maxLength": 0
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "required": [
                "instructor"
              ]
            }
          },
          "detail": {
            "title": "Instructional Event",
            "description": "The instructional event associated to this section.",
            "type": "object",
            "properties": {
              "id": {
                "title": "ID",
                "description": "The global identifier for Instructional Event",
                "type": "string",
                "format": "guid",
                "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
              }
            },
            "links": [
              {
                "rel": "self",
                "href": "/instructional-events/{id}",
                "targetSchema": {
                  "$ref": "instructional-events.json#"
                }
              }
            ],
            "additionalProperties": false,
            "required": [
              "id"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "detail"
        ]
      }
    },
    "owningOrganizations": {
      "title": "Owning Organization",
      "description": "Organizations which own, or are responsible for, a course",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "description": "The code that identifies an organization",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "description": "The full name of an organization.",
            "type": "string"
          },
          "ownershipPercentage": {
            "title": "Percent Ownership",
            "description": "The rate or proportion per hundred of ownership that is attributable to the organization.",
            "type": "number"
          },
          "detail": {
            "title": "Owning Organization",
            "description": "The organization primarily responsible for this section.",
            "type": "object",
            "properties": {
              "id": {
                "title": "ID",
                "description": "The global identifier for Owning Organization",
                "type": "string",
                "format": "guid",
                "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
              }
            },
            "links": [
              {
                "rel": "self",
                "href": "/organizations/{id}",
                "targetSchema": {
                  "$ref": "organizations.json#"
                }
              }
            ],
            "additionalProperties": false,
            "required": [
              "id"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "ownershipPercentage",
          "detail"
        ]
      }
    },
    "gradeTypes": {
      "title": "Grade Types",
      "description": "The grade types that can be used in grading a section",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "description": "The full name of grade type",
            "type": "string",
            "minLength": 1
          },
          "details": {
            "title": "Grade Type",
            "description": "The grade type that is used in this section",
            "type": "object",
            "properties": {
              "id": {
                "title": "ID",
                "description": "The global identifier for Grade Type",
                "type": "string",
                "format": "guid",
                "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
              }
            },
            "links": [
              {
                "rel": "self",
                "href": "/section-grade-types/{id}",
                "targetSchema": {
                  "$ref": "section-grade-types.json#"
                }
              }
            ],
            "additionalProperties": false,
            "required": [
              "id"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "title",
          "details"
        ]
      }
    }
  },
  "required": [
    "id",
    "title",
    "startOn",
    "course"
  ],
  "additionalProperties": false,
  "links": [
    {
      "rel": "instructionalEvents",
      "title": "Instructional Events",
      "description": "The instructional events associated with a section",
      "href": "/instructional-events?section.id={id}",
      "targetSchema": {
        "$ref": "instructional-events.json#"
      }
    },
    {
      "rel": "filter",
      "encType": "application/x-www-form-urlencoded",
      "method": "GET",
      "href": "/sections/",
      "schema": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "startOn": {
            "type": "string",
            "format": "date-time",
            "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
          },
          "endOn": {
            "type": "string",
            "format": "date-time",
            "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"
          },
          "code": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "instructionalPlatform": {
            "type": "string",
            "format": "guid",
            "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
          },
          "academicLevels": {
            "type": "string",
            "format": "guid",
            "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
          },
          "course": {
            "type": "string",
            "format": "guid",
            "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
          },
          "site": {
            "type": "string",
            "format": "guid",
            "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
          },
          "status": {
            "type": "string",
            "enum": [
              "closed",
              "open",
              "pending",
              "cancelled"
            ]
          },
          "owningOrganizations": {
            "type": "string",
            "format": "guid",
            "pattern": "^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$"
          }
        }
      }
    }
  ]
}